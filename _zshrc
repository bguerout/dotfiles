####
#HISTORY
###
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

#####
# COMPLETION
#####
zstyle ':completion:*:*:git:*' script ~/.zsh/git-completion.bash
fpath=(~/.zsh $fpath)
autoload -Uz compinit && compinit

#####
# PROMPT
##### 
+vi-git-updown() {
  git rev-parse @{upstream} >/dev/null 2>&1 || return
  local -a x; x=( $(git rev-list --left-right --count HEAD...@{upstream} ) )
  hook_com[branch]+="%f" # end coloring
  (( x[2] )) && hook_com[branch]+=" %B↓${x[2]}%b"
  (( x[1] )) && hook_com[branch]+=" %B↑${x[1]}%b"
  return 0
}

+vi-git-untracked(){
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then
        # This will show the marker if there are any untracked files in repo.
        # If instead you want to show the marker only if there are untracked
        # files in $PWD, use:
        #[[ -n $(git ls-files --others --exclude-standard) ]] ; then
        hook_com[staged]+='%F{5}+%f'
    fi
}

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*' formats '[%b %a%m%u%c]'
zstyle ':vcs_info:git+post-backend:*' hooks git-updown
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
zstyle ':vcs_info:git*' stagedstr '%F{2}+%f'
zstyle ':vcs_info:git*' unstagedstr '%F{1}+%f'
precmd() { vcs_info }

setopt PROMPT_SUBST
NEWLINE=$'\n'
PROMPT='%(?.%F{green}√.%F{red}?%?)%f %B%F{green}%/%f%b ${vcs_info_msg_0_}${NEWLINE}> '
#REPORTTIME=3

####
#FUNCTIONS
###
function set_iterm2_tab_color {
    case $1 in
    green)
    echo -e "\033]6;1;bg;red;brightness;57\a"
    echo -e "\033]6;1;bg;green;brightness;197\a"
    echo -e "\033]6;1;bg;blue;brightness;77\a"
    ;;
    red)
    echo -e "\033]6;1;bg;red;brightness;270\a"
    echo -e "\033]6;1;bg;green;brightness;60\a"
    echo -e "\033]6;1;bg;blue;brightness;83\a"
    ;;
    orange)
    echo -e "\033]6;1;bg;red;brightness;227\a"
    echo -e "\033]6;1;bg;green;brightness;143\a"
    echo -e "\033]6;1;bg;blue;brightness;10\a"
    ;;
    purple)
    echo -e "\033]6;1;bg;red;brightness;148\a"
    echo -e "\033]6;1;bg;green;brightness;0\a"
    echo -e "\033]6;1;bg;blue;brightness;211\a"
    ;;
    default)
    echo -e "\033]6;1;bg;red;brightness;176\a"
    echo -e "\033]6;1;bg;green;brightness;181\a"
    echo -e "\033]6;1;bg;blue;brightness;175\a"
    esac
}

function set_iterm2_tab_title {
  echo -ne "\033]0;$1\007"
}

function set_iterm2_profile {
    echo -e "\033]50;SetProfile=${1}\a"
}

function ssh {
  local parameters=( "$@" )
  if [[ " ${parameters[@]} " =~ "recette" ]]; then
    set_iterm2_tab_color "orange"
    set_iterm2_profile "orange"
    set_iterm2_tab_title "recette"
  elif [[ " ${parameters[@]} " =~ "production" ]]; then
    set_iterm2_tab_color "red"
    set_iterm2_profile "red"
    set_iterm2_tab_title "production"
  else
   set_iterm2_tab_color "green"
   set_iterm2_profile "green"
  fi

  command ssh $@
  set_iterm2_tab_color default
  set_iterm2_profile Default
}

#####
#JAVA
#####
function setjdk() {
   if [ $# -ne 0 ];
      then export JAVA_HOME=`/usr/libexec/java_home -v $@`;
   fi;
   java -version;
}

function findjdks() {
 /usr/libexec/java_home -V
}

#####
#NODE
#####
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

#####
#RUBY
####
export PATH="$PATH:$HOME/.rvm/bin"

#####
#MONGODB
#####
export PATH="$PATH:$HOME/dev/mongodb-macos-x86_64-4.2.2/bin"

#####
#RUBY
#####
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export PATH="$PATH:$HOME/.rvm/bin"
